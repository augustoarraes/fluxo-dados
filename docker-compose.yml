version: '3.8'

services:
  api:
    build:
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - postgres
    #volumes:
    #  - ./api/:/app/api
    env_file:
      - .env
    # networks:
    #   - fluxo-network

  scheduler:
    build:
      dockerfile: Dockerfile.scheduler
    ports:
      - "8010:8010"
    depends_on:
      - kafka
      - api
    #volumes:
    #  - ./scheduler/:/app/scheduler
    env_file:
      - .env
    # networks:
    #   - fluxo-network

  postgres:
    image: postgres:12.4-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: fluxo-dados
    ports:
      - 5432:5432
    # networks:
    #   - fluxo-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  webkafka:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 9030:8080
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL=PLAINTEXT
      - KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM=PLAIN

volumes:
  postgres_data:


# networks: 
#   fluxo-network:
#     driver: bridge